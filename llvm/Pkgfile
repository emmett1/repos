# Depends on: libxml2 

name=llvm
version=17.0.5
release=1
source=(https://github.com/$name/$name-project/releases/download/llvmorg-$version/$name-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/cmake-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/third-party-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/clang-$version.src.tar.xz
	llvm-config.h
	clang-16.0.3-enable_default_ssp-1.patch)
patch_opt="-Np2 -d ../clang-${version}.src"
build_opt="-DLLVM_ENABLE_FFI=ON
	-DLLVM_BUILD_LLVM_DYLIB=ON
	-DLLVM_LINK_LLVM_DYLIB=ON
	-DLLVM_ENABLE_RTTI=ON
	-DLLVM_TARGETS_TO_BUILD='host;AMDGPU;BPF'
	-DLLVM_BINUTILS_INCDIR=/usr/include
	-DLLVM_INCLUDE_BENCHMARKS=OFF
	-DCLANG_DEFAULT_PIE_ON_LINUX=ON
	-DLLVM_INCLUDE_UTILS=ON
	-DLLVM_INSTALL_UTILS=ON
	-DLLVM_UTILS_INSTALL_DIR=/usr/bin"
build_type=cmake_build

pre_build() {
	# The upstream expects them extracted at the same level as the llvm tarball, and 
	# the extracted directories renamed to cmake and third-party:

	mv ../cmake-${version}.src .
	mv ../third-party-${version}.src .
	mv ../clang-${version}.src tools/clang

	sed "/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-${version}.src@" -i CMakeLists.txt                 
	sed "/LLVM_THIRD_PARTY_DIR/s@../third-party@third-party-${version}.src@" \
		-i cmake/modules/HandleLLVMOptions.cmake
	
	# Fix Python scripts which use /usr/bin/env python to access the system Python:
	grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'
	
	export CC=gcc
	export CXX=g++
}

post_build() {
	# multilib stub
	mv $PKG/usr/include/llvm/Config/llvm-config.h \
	   $PKG/usr/include/llvm/Config/llvm-config-64.h
	cp $SRC/llvm-config.h \
	   $PKG/usr/include/llvm/Config/llvm-config.h	
}
